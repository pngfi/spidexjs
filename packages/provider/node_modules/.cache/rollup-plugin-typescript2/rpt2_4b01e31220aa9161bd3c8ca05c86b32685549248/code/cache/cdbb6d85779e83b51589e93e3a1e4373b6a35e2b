{"code":"export var ProposalStatus;\r\n(function (ProposalStatus) {\r\n    ProposalStatus[\"Unspecified\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\r\n    ProposalStatus[\"Deposit\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\r\n    ProposalStatus[\"Voting\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\r\n    ProposalStatus[\"Passed\"] = \"PROPOSAL_STATUS_PASSED\";\r\n    ProposalStatus[\"Rejected\"] = \"PROPOSAL_STATUS_REJECTED\";\r\n    ProposalStatus[\"Failed\"] = \"PROPOSAL_STATUS_FAILED\";\r\n})(ProposalStatus || (ProposalStatus = {}));\r\n// NOTE: this returns all the proposals\r\n// TODO: add pagination to the request\r\nexport function generateEndpointProposals() {\r\n    return \"/cosmos/gov/v1beta1/proposals\";\r\n}\r\nexport function generateEndpointProposalTally(proposalId) {\r\n    return \"/cosmos/gov/v1beta1/proposals/\".concat(proposalId, \"/tally\");\r\n}\r\n//# sourceMappingURL=gov.js.map","references":["/Users/steven/work/spidexjs/packages/provider/src/rest/coin.ts"],"map":"{\"version\":3,\"file\":\"gov.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/rest/gov.ts\"],\"names\":[],\"mappings\":\"AAEA,MAAM,CAAN,IAAY,cAOX;AAPD,WAAY,cAAc;IACxB,6DAA2C,CAAA;IAC3C,4DAA0C,CAAA;IAC1C,0DAAwC,CAAA;IACxC,mDAAiC,CAAA;IACjC,uDAAqC,CAAA;IACrC,mDAAiC,CAAA;AACnC,CAAC,EAPW,cAAc,KAAd,cAAc,QAOzB;AAED,uCAAuC;AACvC,sCAAsC;AACtC,MAAM,UAAU,yBAAyB;IACvC,OAAO,+BAA+B,CAAA;AACxC,CAAC;AAiCD,MAAM,UAAU,6BAA6B,CAAC,UAAkB;IAC9D,OAAO,wCAAiC,UAAU,WAAQ,CAAA;AAC5D,CAAC\"}","dts":{"name":"/Users/steven/work/spidexjs/packages/provider/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/rest/gov.d.ts","writeByteOrderMark":false,"text":"import { Coin } from './coin';\r\nexport declare enum ProposalStatus {\r\n    Unspecified = \"PROPOSAL_STATUS_UNSPECIFIED\",\r\n    Deposit = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\",\r\n    Voting = \"PROPOSAL_STATUS_VOTING_PERIOD\",\r\n    Passed = \"PROPOSAL_STATUS_PASSED\",\r\n    Rejected = \"PROPOSAL_STATUS_REJECTED\",\r\n    Failed = \"PROPOSAL_STATUS_FAILED\"\r\n}\r\nexport declare function generateEndpointProposals(): string;\r\nexport interface Proposal {\r\n    proposal_id: string;\r\n    content: {\r\n        '@type': string;\r\n        title: string;\r\n        description: string;\r\n    };\r\n    status: string;\r\n    final_tally_result: {\r\n        yes: string;\r\n        abstain: string;\r\n        no: string;\r\n        no_with_veto: string;\r\n    };\r\n    submit_time: string;\r\n    deposit_end_time: string;\r\n    total_deposit: Coin[];\r\n    voting_start_time: string;\r\n    voting_end_time: string;\r\n}\r\nexport interface ProposalsResponse {\r\n    proposals: Proposal[];\r\n    pagination: {\r\n        next_key: string;\r\n        total: number;\r\n    };\r\n}\r\nexport declare function generateEndpointProposalTally(proposalId: string): string;\r\nexport interface TallyResponse {\r\n    tally: {\r\n        yes: string;\r\n        abstain: string;\r\n        no: string;\r\n        no_with_veto: string;\r\n    };\r\n}\r\n"}}
