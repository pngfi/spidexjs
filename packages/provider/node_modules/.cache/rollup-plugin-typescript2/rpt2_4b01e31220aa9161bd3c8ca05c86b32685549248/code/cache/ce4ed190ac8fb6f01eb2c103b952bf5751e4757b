{"code":"export function generateEndpointBroadcast() {\r\n    return \"/cosmos/tx/v1beta1/txs\";\r\n}\r\nexport var BroadcastMode;\r\n(function (BroadcastMode) {\r\n    BroadcastMode[\"Unspecified\"] = \"BROADCAST_MODE_UNSPECIFIED\";\r\n    BroadcastMode[\"Block\"] = \"BROADCAST_MODE_BLOCK\";\r\n    BroadcastMode[\"Sync\"] = \"BROADCAST_MODE_SYNC\";\r\n    BroadcastMode[\"Async\"] = \"BROADCAST_MODE_ASYNC\";\r\n})(BroadcastMode || (BroadcastMode = {}));\r\nexport function generatePostBodyBroadcast(txRaw, broadcastMode) {\r\n    if (broadcastMode === void 0) { broadcastMode = BroadcastMode.Sync; }\r\n    return \"{ \\\"tx_bytes\\\": [\".concat(txRaw.message\r\n        .serializeBinary()\r\n        .toString(), \"], \\\"mode\\\": \\\"\").concat(broadcastMode, \"\\\" }\");\r\n}\r\n//# sourceMappingURL=broadcast.js.map","references":[],"map":"{\"version\":3,\"file\":\"broadcast.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/rest/broadcast.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,UAAU,yBAAyB;IACvC,OAAO,wBAAwB,CAAA;AACjC,CAAC;AAYD,MAAM,CAAN,IAAY,aAKX;AALD,WAAY,aAAa;IACvB,2DAA0C,CAAA;IAC1C,+CAA8B,CAAA;IAC9B,6CAA4B,CAAA;IAC5B,+CAA8B,CAAA;AAChC,CAAC,EALW,aAAa,KAAb,aAAa,QAKxB;AAED,MAAM,UAAU,yBAAyB,CACvC,KAAe,EACf,aAA0C;IAA1C,8BAAA,EAAA,gBAAwB,aAAa,CAAC,IAAI;IAE1C,OAAO,2BAAkB,KAAK,CAAC,OAAO;SACnC,eAAe,EAAE;SACjB,QAAQ,EAAE,4BAAe,aAAa,SAAK,CAAA;AAChD,CAAC\"}","dts":{"name":"/Users/steven/work/spidexjs/packages/provider/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/rest/broadcast.d.ts","writeByteOrderMark":false,"text":"export declare function generateEndpointBroadcast(): string;\r\nexport interface TxToSend {\r\n    message: {\r\n        serializeBinary: () => Uint8Array;\r\n    };\r\n    path: string;\r\n}\r\nexport declare enum BroadcastMode {\r\n    Unspecified = \"BROADCAST_MODE_UNSPECIFIED\",\r\n    Block = \"BROADCAST_MODE_BLOCK\",\r\n    Sync = \"BROADCAST_MODE_SYNC\",\r\n    Async = \"BROADCAST_MODE_ASYNC\"\r\n}\r\nexport declare function generatePostBodyBroadcast(txRaw: TxToSend, broadcastMode?: string): string;\r\nexport interface BroadcastPostBody {\r\n    tx_bytes: Uint8Array;\r\n    mode: string;\r\n}\r\n"}}
