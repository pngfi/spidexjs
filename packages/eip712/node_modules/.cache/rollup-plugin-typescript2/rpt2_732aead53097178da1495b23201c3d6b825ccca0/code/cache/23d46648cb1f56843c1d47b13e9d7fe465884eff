{"code":"// Parse Chain ID string into number. Throws error on failure case.\r\nexport function parseChainId(chainId) {\r\n    var matches = chainId.match('^([a-z]{1,})_{1}([1-9][0-9]*)-{1}([1-9][0-9]*)$');\r\n    if (!matches ||\r\n        matches.length !== 4 ||\r\n        matches[1] === '' ||\r\n        Number.isNaN(Number(matches[2]))) {\r\n        throw new Error(\"Invalid chainId received: \".concat(chainId));\r\n    }\r\n    return Number(matches[2]);\r\n}\r\n//# sourceMappingURL=utils.js.map","references":[],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/encoding/utils.ts\"],\"names\":[],\"mappings\":\"AAAA,mEAAmE;AACnE,MAAM,UAAU,YAAY,CAAC,OAAe;IAC1C,IAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAC3B,iDAAiD,CAClD,CAAA;IAED,IACE,CAAC,OAAO;QACR,OAAO,CAAC,MAAM,KAAK,CAAC;QACpB,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE;QACjB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAChC;QACA,MAAM,IAAI,KAAK,CAAC,oCAA6B,OAAO,CAAE,CAAC,CAAA;KACxD;IAED,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;AAC3B,CAAC\"}","dts":{"name":"/Users/steven/work/spidexjs/packages/eip712/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/encoding/utils.d.ts","writeByteOrderMark":false,"text":"export declare function parseChainId(chainId: string): number;\r\n"}}
