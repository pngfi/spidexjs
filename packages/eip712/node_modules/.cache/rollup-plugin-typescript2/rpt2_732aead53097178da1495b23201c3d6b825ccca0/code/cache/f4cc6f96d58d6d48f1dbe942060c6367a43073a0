{"code":"export function createEIP712(types, chainId, message) {\r\n    return {\r\n        types: types,\r\n        primaryType: 'Tx',\r\n        domain: {\r\n            name: 'Cosmos Web3',\r\n            version: '1.0.0',\r\n            chainId: chainId,\r\n            verifyingContract: 'cosmos',\r\n            salt: '0',\r\n        },\r\n        message: message,\r\n    };\r\n}\r\nexport function generateMessageWithMultipleTransactions(accountNumber, sequence, chainCosmosId, memo, fee, msgs) {\r\n    return {\r\n        account_number: accountNumber,\r\n        chain_id: chainCosmosId,\r\n        fee: fee,\r\n        memo: memo,\r\n        msgs: msgs,\r\n        sequence: sequence,\r\n    };\r\n}\r\nexport function generateMessage(accountNumber, sequence, chainCosmosId, memo, fee, msg) {\r\n    return generateMessageWithMultipleTransactions(accountNumber, sequence, chainCosmosId, memo, fee, [msg]);\r\n}\r\nexport function generateTypes(msgValues) {\r\n    var types = {\r\n        EIP712Domain: [\r\n            { name: 'name', type: 'string' },\r\n            { name: 'version', type: 'string' },\r\n            { name: 'chainId', type: 'uint256' },\r\n            { name: 'verifyingContract', type: 'string' },\r\n            { name: 'salt', type: 'string' },\r\n        ],\r\n        Tx: [\r\n            { name: 'account_number', type: 'string' },\r\n            { name: 'chain_id', type: 'string' },\r\n            { name: 'fee', type: 'Fee' },\r\n            { name: 'memo', type: 'string' },\r\n            { name: 'msgs', type: 'Msg[]' },\r\n            { name: 'sequence', type: 'string' },\r\n        ],\r\n        Fee: [\r\n            { name: 'feePayer', type: 'string' },\r\n            { name: 'amount', type: 'Coin[]' },\r\n            { name: 'gas', type: 'string' },\r\n        ],\r\n        Coin: [\r\n            { name: 'denom', type: 'string' },\r\n            { name: 'amount', type: 'string' },\r\n        ],\r\n        Msg: [\r\n            { name: 'type', type: 'string' },\r\n            { name: 'value', type: 'MsgValue' },\r\n        ],\r\n    };\r\n    Object.assign(types, msgValues);\r\n    return types;\r\n}\r\nexport function generateFee(amount, denom, gas, feePayer) {\r\n    return {\r\n        amount: [\r\n            {\r\n                amount: amount,\r\n                denom: denom,\r\n            },\r\n        ],\r\n        gas: gas,\r\n        feePayer: feePayer,\r\n    };\r\n}\r\n//# sourceMappingURL=base.js.map","references":[],"map":"{\"version\":3,\"file\":\"base.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/messages/base.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/steven/work/spidexjs/packages/eip712/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/messages/base.d.ts","writeByteOrderMark":false,"text":"export declare function createEIP712(types: object, chainId: number, message: object): {\r\n    types: object;\r\n    primaryType: string;\r\n    domain: {\r\n        name: string;\r\n        version: string;\r\n        chainId: number;\r\n        verifyingContract: string;\r\n        salt: string;\r\n    };\r\n    message: object;\r\n};\r\nexport declare function generateMessageWithMultipleTransactions(accountNumber: string, sequence: string, chainCosmosId: string, memo: string, fee: object, msgs: object[]): {\r\n    account_number: string;\r\n    chain_id: string;\r\n    fee: object;\r\n    memo: string;\r\n    msgs: object[];\r\n    sequence: string;\r\n};\r\nexport declare function generateMessage(accountNumber: string, sequence: string, chainCosmosId: string, memo: string, fee: object, msg: object): {\r\n    account_number: string;\r\n    chain_id: string;\r\n    fee: object;\r\n    memo: string;\r\n    msgs: object[];\r\n    sequence: string;\r\n};\r\nexport declare function generateTypes(msgValues: object): {\r\n    EIP712Domain: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n    Tx: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n    Fee: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n    Coin: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n    Msg: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n};\r\nexport declare function generateFee(amount: string, denom: string, gas: string, feePayer: string): {\r\n    amount: {\r\n        amount: string;\r\n        denom: string;\r\n    }[];\r\n    gas: string;\r\n    feePayer: string;\r\n};\r\n"}}
