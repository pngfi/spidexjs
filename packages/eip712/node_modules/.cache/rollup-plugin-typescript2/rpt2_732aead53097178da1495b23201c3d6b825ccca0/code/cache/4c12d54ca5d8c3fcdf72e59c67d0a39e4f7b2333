{"code":"var NOT_MODIFY = '[do-not-modify]';\r\n/* eslint-disable camelcase */\r\nexport var MSG_EDIT_VALIDATOR_TYPES = {\r\n    TypeDescription: [\r\n        { name: 'moniker', type: 'string' },\r\n        { name: 'identity', type: 'string' },\r\n        { name: 'website', type: 'string' },\r\n        { name: 'security_contact', type: 'string' },\r\n        { name: 'details', type: 'string' },\r\n    ],\r\n    MsgValue: [\r\n        { name: 'description', type: 'TypeDescription' },\r\n        { name: 'validator_address', type: 'string' },\r\n        { name: 'commission_rate', type: 'string' },\r\n        { name: 'min_self_delegation', type: 'string' },\r\n    ],\r\n};\r\nexport function createMsgEditValidator(moniker, identity, website, securityContact, details, validatorAddress, commissionRate, minSelfDelegation) {\r\n    return {\r\n        type: 'cosmos-sdk/MsgEditValidator',\r\n        value: {\r\n            description: {\r\n                moniker: moniker || NOT_MODIFY,\r\n                identity: identity || NOT_MODIFY,\r\n                website: website || NOT_MODIFY,\r\n                security_contact: securityContact || NOT_MODIFY,\r\n                details: details || NOT_MODIFY,\r\n            },\r\n            validator_address: validatorAddress,\r\n            // TODO: passing '<nil>' is the correct value but it's not supported by ethermint (EIP712 parser) https://github.com/tharsis/ethermint/issues/1125\r\n            commission_rate: commissionRate || '<nil>',\r\n            min_self_delegation: minSelfDelegation || '<nil>',\r\n        },\r\n    };\r\n}\r\n/* eslint-disable camelcase */\r\nexport var MSG_SET_WITHDRAW_ADDRESS_TYPES = {\r\n    MsgValue: [\r\n        { name: 'delegator_address', type: 'string' },\r\n        { name: 'withdraw_address', type: 'string' },\r\n    ],\r\n};\r\nexport function createMsgSetWithdrawAddress(delegatorAddress, withdrawAddress) {\r\n    return {\r\n        type: 'cosmos-sdk/MsgModifyWithdrawAddress',\r\n        value: {\r\n            delegator_address: delegatorAddress,\r\n            withdraw_address: withdrawAddress,\r\n        },\r\n    };\r\n}\r\n//# sourceMappingURL=validator.js.map","references":[],"map":"{\"version\":3,\"file\":\"validator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/messages/validator.ts\"],\"names\":[],\"mappings\":\"AAAA,IAAM,UAAU,GAAG,iBAAiB,CAAA;AAEpC,8BAA8B;AAC9B,MAAM,CAAC,IAAM,wBAAwB,GAAG;IACtC,eAAe,EAAE;QACf,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE;QACnC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE;QACpC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE;QACnC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC5C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE;KACpC;IACD,QAAQ,EAAE;QACR,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,iBAAiB,EAAE;QAChD,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7C,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC3C,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,QAAQ,EAAE;KAChD;CACF,CAAA;AASD,MAAM,UAAU,sBAAsB,CACpC,OAA2B,EAC3B,QAA4B,EAC5B,OAA2B,EAC3B,eAAmC,EACnC,OAA2B,EAC3B,gBAAoC,EACpC,cAAkC,EAClC,iBAAqC;IAErC,OAAO;QACL,IAAI,EAAE,6BAA6B;QACnC,KAAK,EAAE;YACL,WAAW,EAAE;gBACX,OAAO,EAAE,OAAO,IAAI,UAAU;gBAC9B,QAAQ,EAAE,QAAQ,IAAI,UAAU;gBAChC,OAAO,EAAE,OAAO,IAAI,UAAU;gBAC9B,gBAAgB,EAAE,eAAe,IAAI,UAAU;gBAC/C,OAAO,EAAE,OAAO,IAAI,UAAU;aAC/B;YACD,iBAAiB,EAAE,gBAAgB;YACnC,kJAAkJ;YAClJ,eAAe,EAAE,cAAc,IAAI,OAAO;YAC1C,mBAAmB,EAAE,iBAAiB,IAAI,OAAO;SAClD;KACF,CAAA;AACH,CAAC;AAED,8BAA8B;AAC9B,MAAM,CAAC,IAAM,8BAA8B,GAAG;IAC5C,QAAQ,EAAE;QACR,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7C,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC7C;CACF,CAAA;AAED,MAAM,UAAU,2BAA2B,CACzC,gBAAwB,EACxB,eAAuB;IAEvB,OAAO;QACL,IAAI,EAAE,qCAAqC;QAC3C,KAAK,EAAE;YACL,iBAAiB,EAAE,gBAAgB;YACnC,gBAAgB,EAAE,eAAe;SAClC;KACF,CAAA;AACH,CAAC\"}","dts":{"name":"/Users/steven/work/spidexjs/packages/eip712/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/messages/validator.d.ts","writeByteOrderMark":false,"text":"export declare const MSG_EDIT_VALIDATOR_TYPES: {\r\n    TypeDescription: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n    MsgValue: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n};\r\nexport interface MsgEditValidatorInterface {\r\n    type: string;\r\n    value: {\r\n        validator_address: string;\r\n    };\r\n}\r\nexport declare function createMsgEditValidator(moniker: string | undefined, identity: string | undefined, website: string | undefined, securityContact: string | undefined, details: string | undefined, validatorAddress: string | undefined, commissionRate: string | undefined, minSelfDelegation: string | undefined): {\r\n    type: string;\r\n    value: {\r\n        description: {\r\n            moniker: string;\r\n            identity: string;\r\n            website: string;\r\n            security_contact: string;\r\n            details: string;\r\n        };\r\n        validator_address: string | undefined;\r\n        commission_rate: string;\r\n        min_self_delegation: string;\r\n    };\r\n};\r\nexport declare const MSG_SET_WITHDRAW_ADDRESS_TYPES: {\r\n    MsgValue: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n};\r\nexport declare function createMsgSetWithdrawAddress(delegatorAddress: string, withdrawAddress: string): {\r\n    type: string;\r\n    value: {\r\n        delegator_address: string;\r\n        withdraw_address: string;\r\n    };\r\n};\r\n"}}
