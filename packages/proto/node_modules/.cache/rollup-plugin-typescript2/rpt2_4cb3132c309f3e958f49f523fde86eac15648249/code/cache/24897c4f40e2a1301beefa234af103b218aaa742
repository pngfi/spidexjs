{"code":"import * as stakingtypes from '../proto/cosmos/staking/v1beta1/staking';\r\nimport * as staking from '../proto/cosmos/staking/v1beta1/tx';\r\nimport * as distribution from '../proto/cosmos/distribution/v1beta1/tx';\r\nvar NOT_MODIFY = '[do-not-modify]';\r\nexport function createMsgEditValidator(moniker, identity, website, securityContact, details, validatorAddress, commissionRate, minSelfDelegation) {\r\n    var message = new staking.cosmos.staking.v1beta1.MsgEditValidator({\r\n        description: new stakingtypes.cosmos.staking.v1beta1.Description({\r\n            moniker: moniker || NOT_MODIFY,\r\n            identity: identity || NOT_MODIFY,\r\n            website: website || NOT_MODIFY,\r\n            security_contact: securityContact || NOT_MODIFY,\r\n            details: details || NOT_MODIFY,\r\n        }),\r\n        validator_address: validatorAddress,\r\n        commission_rate: commissionRate,\r\n        min_self_delegation: minSelfDelegation,\r\n    });\r\n    return {\r\n        message: message,\r\n        path: 'cosmos.staking.v1beta1.MsgEditValidator',\r\n    };\r\n}\r\nexport function createMsgSetWithdrawAddress(delegatorAddress, withdrawAddress) {\r\n    var message = new distribution.cosmos.distribution.v1beta1.MsgSetWithdrawAddress({\r\n        delegator_address: delegatorAddress,\r\n        withdraw_address: withdrawAddress,\r\n    });\r\n    return {\r\n        message: message,\r\n        path: 'cosmos.distribution.v1beta1.MsgSetWithdrawAddress',\r\n    };\r\n}\r\n//# sourceMappingURL=validator.js.map","references":["/Users/steven/work/spidexjs/packages/proto/proto/cosmos/staking/v1beta1/staking.ts","/Users/steven/work/spidexjs/packages/proto/proto/cosmos/staking/v1beta1/tx.ts","/Users/steven/work/spidexjs/packages/proto/proto/cosmos/distribution/v1beta1/tx.ts"],"map":"{\"version\":3,\"file\":\"validator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../messages/validator.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,YAAY,MAAM,yCAAyC,CAAA;AACvE,OAAO,KAAK,OAAO,MAAM,oCAAoC,CAAA;AAC7D,OAAO,KAAK,YAAY,MAAM,yCAAyC,CAAA;AAEvE,IAAM,UAAU,GAAG,iBAAiB,CAAA;AAOpC,MAAM,UAAU,sBAAsB,CACpC,OAA2B,EAC3B,QAA4B,EAC5B,OAA2B,EAC3B,eAAmC,EACnC,OAA2B,EAC3B,gBAAoC,EACpC,cAAkC,EAClC,iBAAqC;IAErC,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC;QAClE,WAAW,EAAE,IAAI,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;YAC/D,OAAO,EAAE,OAAO,IAAI,UAAU;YAC9B,QAAQ,EAAE,QAAQ,IAAI,UAAU;YAChC,OAAO,EAAE,OAAO,IAAI,UAAU;YAC9B,gBAAgB,EAAE,eAAe,IAAI,UAAU;YAC/C,OAAO,EAAE,OAAO,IAAI,UAAU;SAC/B,CAAC;QACF,iBAAiB,EAAE,gBAAgB;QACnC,eAAe,EAAE,cAAc;QAC/B,mBAAmB,EAAE,iBAAiB;KACvC,CAAC,CAAA;IAEF,OAAO;QACL,OAAO,SAAA;QACP,IAAI,EAAE,yCAAyC;KAChD,CAAA;AACH,CAAC;AAOD,MAAM,UAAU,2BAA2B,CACzC,gBAAwB,EACxB,eAAuB;IAEvB,IAAM,OAAO,GACX,IAAI,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC;QACjE,iBAAiB,EAAE,gBAAgB;QACnC,gBAAgB,EAAE,eAAe;KAClC,CAAC,CAAA;IAEJ,OAAO;QACL,OAAO,SAAA;QACP,IAAI,EAAE,mDAAmD;KAC1D,CAAA;AACH,CAAC\"}","dts":{"name":"/Users/steven/work/spidexjs/packages/proto/node_modules/.cache/rollup-plugin-typescript2/placeholder/messages/validator.d.ts","writeByteOrderMark":false,"text":"import * as staking from '../proto/cosmos/staking/v1beta1/tx';\r\nimport * as distribution from '../proto/cosmos/distribution/v1beta1/tx';\r\nexport interface MsgEditValidatorProtoInterface {\r\n    path: string;\r\n    message: staking.cosmos.staking.v1beta1.MsgEditValidator;\r\n}\r\nexport declare function createMsgEditValidator(moniker: string | undefined, identity: string | undefined, website: string | undefined, securityContact: string | undefined, details: string | undefined, validatorAddress: string | undefined, commissionRate: string | undefined, minSelfDelegation: string | undefined): {\r\n    message: staking.cosmos.staking.v1beta1.MsgEditValidator;\r\n    path: string;\r\n};\r\nexport interface MsgSetWithdrawAddressProtoInterface {\r\n    path: string;\r\n    message: distribution.cosmos.distribution.v1beta1.MsgSetWithdrawAddress;\r\n}\r\nexport declare function createMsgSetWithdrawAddress(delegatorAddress: string, withdrawAddress: string): {\r\n    message: distribution.cosmos.distribution.v1beta1.MsgSetWithdrawAddress;\r\n    path: string;\r\n};\r\n"}}
