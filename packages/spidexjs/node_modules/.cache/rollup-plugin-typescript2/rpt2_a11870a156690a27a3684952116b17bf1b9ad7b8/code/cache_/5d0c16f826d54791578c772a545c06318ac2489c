{"code":"import { createMsgEditValidator as protoMsgEditValidator, createMsgSetWithdrawAddress as protoMsgSetWithdrawAddress, createTransaction, } from '../../../proto';\r\nimport { createEIP712, generateFee, generateMessage, generateTypes, MSG_EDIT_VALIDATOR_TYPES, createMsgEditValidator, MSG_SET_WITHDRAW_ADDRESS_TYPES, createMsgSetWithdrawAddress, } from '../../../eip712';\r\nexport function createTxMsgEditValidator(chain, sender, fee, memo, params) {\r\n    // EIP712\r\n    var feeObject = generateFee(fee.amount, fee.denom, fee.gas, sender.accountAddress);\r\n    var types = generateTypes(MSG_EDIT_VALIDATOR_TYPES);\r\n    var msg = createMsgEditValidator(params.moniker, params.identity, params.website, params.securityContact, params.details, params.validatorAddress, params.commissionRate, params.minSelfDelegation);\r\n    var messages = generateMessage(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);\r\n    var eipToSign = createEIP712(types, chain.chainId, messages);\r\n    // Cosmos\r\n    var protoMessage = protoMsgEditValidator(params.moniker, params.identity, params.website, params.securityContact, params.details, params.validatorAddress, params.commissionRate, params.minSelfDelegation);\r\n    var tx = createTransaction(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), 'ethsecp256', sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);\r\n    return {\r\n        signDirect: tx.signDirect,\r\n        legacyAmino: tx.legacyAmino,\r\n        eipToSign: eipToSign,\r\n    };\r\n}\r\nexport function createTxMsgSetWithdrawAddress(chain, sender, fee, memo, params) {\r\n    // EIP712\r\n    var feeObject = generateFee(fee.amount, fee.denom, fee.gas, sender.accountAddress);\r\n    var types = generateTypes(MSG_SET_WITHDRAW_ADDRESS_TYPES);\r\n    var msg = createMsgSetWithdrawAddress(params.delegatorAddress, params.withdrawAddress);\r\n    var messages = generateMessage(sender.accountNumber.toString(), sender.sequence.toString(), chain.cosmosChainId, memo, feeObject, msg);\r\n    var eipToSign = createEIP712(types, chain.chainId, messages);\r\n    // Cosmos\r\n    var protoMessage = protoMsgSetWithdrawAddress(params.delegatorAddress, params.withdrawAddress);\r\n    var tx = createTransaction(protoMessage, memo, fee.amount, fee.denom, parseInt(fee.gas, 10), 'ethsecp256', sender.pubkey, sender.sequence, sender.accountNumber, chain.cosmosChainId);\r\n    return {\r\n        signDirect: tx.signDirect,\r\n        legacyAmino: tx.legacyAmino,\r\n        eipToSign: eipToSign,\r\n    };\r\n}\r\n//# sourceMappingURL=validator.js.map","references":["/Users/steven/work/spidexjs/packages/proto/dist/index.d.ts","/Users/steven/work/spidexjs/packages/eip712/dist/index.d.ts","/Users/steven/work/spidexjs/packages/transactions/src/messages/common.ts"],"map":"{\"version\":3,\"file\":\"validator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../transactions/src/messages/validator.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/steven/work/spidexjs/packages/spidexjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/transactions/src/messages/validator.d.ts","writeByteOrderMark":false,"text":"import { Chain, Fee, Sender } from './common';\r\nexport interface MsgEditValidatorParams {\r\n    moniker: string | undefined;\r\n    identity: string | undefined;\r\n    website: string | undefined;\r\n    securityContact: string | undefined;\r\n    details: string | undefined;\r\n    validatorAddress: string | undefined;\r\n    commissionRate: string | undefined;\r\n    minSelfDelegation: string | undefined;\r\n}\r\nexport declare function createTxMsgEditValidator(chain: Chain, sender: Sender, fee: Fee, memo: string, params: MsgEditValidatorParams): {\r\n    signDirect: {\r\n        body: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.TxBody;\r\n        authInfo: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.AuthInfo;\r\n        signBytes: string;\r\n    };\r\n    legacyAmino: {\r\n        body: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.TxBody;\r\n        authInfo: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.AuthInfo;\r\n        signBytes: string;\r\n    };\r\n    eipToSign: {\r\n        types: object;\r\n        primaryType: string;\r\n        domain: {\r\n            name: string;\r\n            version: string;\r\n            chainId: number;\r\n            verifyingContract: string;\r\n            salt: string;\r\n        };\r\n        message: object;\r\n    };\r\n};\r\nexport interface MsgSetWithdrawAddressParams {\r\n    delegatorAddress: string;\r\n    withdrawAddress: string;\r\n}\r\nexport declare function createTxMsgSetWithdrawAddress(chain: Chain, sender: Sender, fee: Fee, memo: string, params: MsgSetWithdrawAddressParams): {\r\n    signDirect: {\r\n        body: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.TxBody;\r\n        authInfo: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.AuthInfo;\r\n        signBytes: string;\r\n    };\r\n    legacyAmino: {\r\n        body: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.TxBody;\r\n        authInfo: import(\"../../../proto/dist/proto/cosmos/tx/v1beta1/tx\").cosmos.tx.v1beta1.AuthInfo;\r\n        signBytes: string;\r\n    };\r\n    eipToSign: {\r\n        types: object;\r\n        primaryType: string;\r\n        domain: {\r\n            name: string;\r\n            version: string;\r\n            chainId: number;\r\n            verifyingContract: string;\r\n            salt: string;\r\n        };\r\n        message: object;\r\n    };\r\n};\r\n"}}
